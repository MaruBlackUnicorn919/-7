Задача 1: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N. Использовать рекурсию, не использовать циклы.

using System;

namespace RecursionExample
{
    class Program
    {
        static void PrintNumbers(int current, int end)
        {
            if (current <= end)
            {
                Console.WriteLine(current);
                PrintNumbers(current + 1, end);
            }
        }
        static void Main(string[] args)
        {
            Console.Write("Введите начальное число M: ");
            int M = int.Parse(Console.ReadLine());
            Console.Write("Введите конечное число N: ");
            int N = int.Parse(Console.ReadLine());
            PrintNumbers(M, N);
            Console.ReadKey();
        }
    }
}


Задача 2: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.

using System;

namespace AckermanFunction
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("Введите число m: ");
            int m = int.Parse(Console.ReadLine());
            Console.Write("Введите число n: ");
            int n = int.Parse(Console.ReadLine());
            int result = Ackerman(m, n);
            Console.WriteLine($"Результат функции Аккермана для чисел {m} и {n} равен {result}");
        }

        static int Ackerman(int m, int n)
        {
            if (m == 0)
            {
                return n + 1;
            }
            else if (n == 0)
            {
                return Ackerman(m - 1, 1);
            }
            else
            {
                return Ackerman(m - 1, Ackerman(m, n - 1));
            }
        }
    }
}


Задача 3: Задайте произвольный массив. Выведете его элементы, начиная с конца. Использовать рекурсию, не использовать циклы.

using System;

class Program
{
    static void Main(string[] args)
    {
        int[] array = { 1, 2, 3, 4, 5 };
        PrintArrayReverse(array, array.Length - 1);
    }
    static void PrintArrayReverse(int[] array, int index)

    {
        if (index == 0)
        {
            Console.WriteLine(array[index]);
            return;
        }
        Console.WriteLine(array[index]);
        PrintArrayReverse(array, index - 1);
    }
}